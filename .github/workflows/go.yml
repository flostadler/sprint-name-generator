name: Build and Deploy sprintnamegenerator.com
on:
  push:
    branches:
      - master
jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: ${{ secrets.DOCKER_HUB_USERNAME }}
      
    steps:

    - name: Set up Go 1.18
      uses: actions/setup-go@v1
      with:
        go-version: 1.18
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi

    - name: Build api
      run: go build -v -o main ${{ github.workspace }}/cmd/name-generator

    - name: Build wasm
      run: GOOS=js GOARCH=wasm go build -o web/generator.wasm ${{ github.workspace }}/cmd/web
      
    - name: Copy wasm_exec
      run: cp $GOROOT/misc/wasm/wasm_exec.js ${{ github.workspace }}/web/wasm_exec.js
      
    - name: Use Node.js 14.x
      uses: actions/setup-node@v1
      with:
        node-version: 14.x

    - run: npm install
      working-directory: ${{ github.workspace }}/web
      
    - run: npm run build --if-present
      working-directory: ${{ github.workspace }}/web
      env:
        CI: true
    
    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
          
    - name: Build Docker image
      run: docker build . -f ${{ github.workspace }}/build/package/Dockerfile -t ${{ env.IMAGE_NAME }}/sprint-name-generator:${{github.run_number}}

    - name: Run container image security scan
      uses: Azure/container-scan@v0
      with:
        image-name: ${{ env.IMAGE_NAME }}/sprint-name-generator:${{github.run_number}}
        severity-threshold: CRITICAL
        run-quality-checks: true
        
    - name: Push Docker image
      run: docker push ${{ env.IMAGE_NAME }}/sprint-name-generator:${{github.run_number}}

    - name: Install SSH Client
      uses: webfactory/ssh-agent@v0.4.1
      with:
        ssh-private-key: ${{ secrets.DEPLOY_KEY }}
      if: ${{ false }}

    - name: Deploy Page
      uses: JamesIves/github-pages-deploy-action@releases/v3
      with:
        SSH: true
        BRANCH: gh-pages
        FOLDER: ${{ github.workspace }}/web/build
      if: ${{ false }}
